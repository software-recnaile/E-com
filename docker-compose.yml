##version: '3.8'
##
##services:
##  mongodb:
##    image: mongo:6.0
##    container_name: mongodb
##    ports:
##      - "27017:27017"
##    environment:
##      MONGO_INITDB_ROOT_USERNAME: root
##      MONGO_INITDB_ROOT_PASSWORD: Ram#2123
##    volumes:
##      - mongodb_data:/data/db
##
##  feature1-service:
##    build: ./Authservice
##    container_name: authservice
##    ports:
##      - "8081:8081"
####    depends_on:
####      - mongodb
###    environment:
###      SPRING_DATA_MONGODB_URI: mongodb://root:Ram#2123@mongodb:27017/auth_db?authSource=admin
##
##  feature2-service:
##    build: ./oauthService
##    container_name: oauthService
##    ports:
##      - "8080:8080"
##    depends_on:
##      - mongodb
##    environment:
##      SPRING_DATA_MONGODB_URI: mongodb://root:Ram#2123@mongodb:27017/auth_db?authSource=admin
##
##volumes:
##  mongodb_data:
#
#
##version: '3.8'
##
##services:
##  feature1-service:
##    build: ./authservice
##    container_name: authservice
##    ports:
##      - "8081:8081"
##    environment:
##      # Use your actual MongoDB Atlas URI here
##      SPRING_DATA_MONGODB_URI: mongodb+srv://software:$Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile
##
##  feature2-service:
##    build: ./oauthService
##    container_name: oauthService
##    ports:
##      - "8080:8080"
##    environment:
##      # Use your actual MongoDB Atlas URI here
##      SPRING_DATA_MONGODB_URI: mongodb+srv://software:$Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile
#
#



version: '3.8'

services:
  feature1-service:
    build: ./authservice
    container_name: authservice
    ports:
      - "8081:8081"
    environment:
      # MongoDB Atlas connection URI with database auth-db
      SPRING_DATA_MONGODB_URI: mongodb+srv://software:%24Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile

  feature2-service:
    build: ./oauthService
    container_name: oauthService
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb+srv://software:$Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile

  feature3-service:
    build: ./productservice
    container_name: productservice
    ports:
      - "8083:8083"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb+srv://software:$Tech2025@recnaile.ffukcey.mongodb.net/product-db?retryWrites=true&w=majority&appName=Recnaile


#
#services:
#  feature1-service:
#    build:
#      context: ./authservice
#      dockerfile: Dockerfile
#    container_name: authservice
#    environment:
#      SPRING_DATA_MONGODB_URI: mongodb+srv://software:%24Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile
#    ports:
#      - mode: ingress
#        target: 8081
#        published: "8081"
#        protocol: tcp
#        app_protocol: http
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
#      interval: 30s
#      timeout: 5s
#      retries: 3
#    deploy:
#      resources:
#        reservations:
#          memory: 512M
#
#  feature2-service:
#    build:
#      context: ./oauthService
#      dockerfile: Dockerfile
#    container_name: oauthservice
#    environment:
#      SPRING_DATA_MONGODB_URI: mongodb+srv://software:%24Tech2025@recnaile.ffukcey.mongodb.net/auth-db?retryWrites=true&w=majority&appName=Recnaile
#    ports:
#      - mode: ingress
#        target: 8080
#        published: "8080"
#        protocol: tcp
#        app_protocol: http
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 5s
#      retries: 3
#    deploy:
#      resources:
#        reservations:
#          memory: 512M
#
# feature3-service:
#    build:
#      context: ./productservice
#      dockerfile: Dockerfile
#    container_name: productservice
#    environment:
#      SPRING_DATA_MONGODB_URI: mongodb+srv://software:%24Tech2025@recnaile.ffukcey.mongodb.net/product-db?retryWrites=true&w=majority&appName=Recnaile
#    ports:
#      - mode: ingress
#        target: 8083
#        published: "8083"
#        protocol: tcp
#        app_protocol: http
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
#      interval: 30s
#      timeout: 5s
#      retries: 3
#    deploy:
#      resources:
#        reservations:
#          memory: 512M
